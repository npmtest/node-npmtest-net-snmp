{"/home/travis/build/npmtest/node-npmtest-net-snmp/test.js":"/* istanbul instrument in package npmtest_net_snmp */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-net-snmp/lib.npmtest_net_snmp.js":"/* istanbul instrument in package npmtest_net_snmp */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_net_snmp = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_net_snmp = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-net-snmp/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-net-snmp && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_net_snmp */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_net_snmp\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_net_snmp.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_net_snmp.rollup.js'] =\n            local.assetsDict['/assets.npmtest_net_snmp.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_net_snmp.__dirname + '/lib.npmtest_net_snmp.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-net-snmp/node_modules/net-snmp/index.js":"\n// Copyright 2013 Stephen Vickers <stephen.vickers.sv@gmail.com>\n\nvar ber = require (\"asn1\").Ber;\nvar dgram = require (\"dgram\");\nvar events = require (\"events\");\nvar util = require (\"util\");\n\n/*****************************************************************************\n ** Constants\n **/\n\nfunction _expandConstantObject (object) {\n\tvar keys = [];\n\tfor (var key in object)\n\t\tkeys.push (key);\n\tfor (var i = 0; i < keys.length; i++)\n\t\tobject[object[keys[i]]] = parseInt (keys[i]);\n}\n\nvar ErrorStatus = {\n\t0: \"NoError\",\n\t1: \"TooBig\",\n\t2: \"NoSuchName\",\n\t3: \"BadValue\",\n\t4: \"ReadOnly\",\n\t5: \"GeneralError\",\n\t6: \"NoAccess\",\n\t7: \"WrongType\",\n\t8: \"WrongLength\",\n\t9: \"WrongEncoding\",\n\t10: \"WrongValue\",\n\t11: \"NoCreation\",\n\t12: \"InconsistentValue\",\n\t13: \"ResourceUnavailable\",\n\t14: \"CommitFailed\",\n\t15: \"UndoFailed\",\n\t16: \"AuthorizationError\",\n\t17: \"NotWritable\",\n\t18: \"InconsistentName\"\n};\n\n_expandConstantObject (ErrorStatus);\n\nvar ObjectType = {\n\t1: \"Boolean\",\n\t2: \"Integer\",\n\t4: \"OctetString\",\n\t5: \"Null\",\n\t6: \"OID\",\n\t64: \"IpAddress\",\n\t65: \"Counter\",\n\t66: \"Gauge\",\n\t67: \"TimeTicks\",\n\t68: \"Opaque\",\n\t70: \"Counter64\",\n\t128: \"NoSuchObject\",\n\t129: \"NoSuchInstance\",\n\t130: \"EndOfMibView\"\n};\n\n_expandConstantObject (ObjectType);\n\nObjectType.Integer32 = ObjectType.Integer;\nObjectType.Counter32 = ObjectType.Counter;\nObjectType.Gauge32 = ObjectType.Gauge;\nObjectType.Unsigned32 = ObjectType.Gauge32;\n\nvar PduType = {\n\t160: \"GetRequest\",\n\t161: \"GetNextRequest\",\n\t162: \"GetResponse\",\n\t163: \"SetRequest\",\n\t164: \"Trap\",\n\t165: \"GetBulkRequest\",\n\t166: \"InformRequest\",\n\t167: \"TrapV2\",\n\t168: \"Report\"\n};\n\n_expandConstantObject (PduType);\n\nvar TrapType = {\n\t0: \"ColdStart\",\n\t1: \"WarmStart\",\n\t2: \"LinkDown\",\n\t3: \"LinkUp\",\n\t4: \"AuthenticationFailure\",\n\t5: \"EgpNeighborLoss\",\n\t6: \"EnterpriseSpecific\"\n};\n\n_expandConstantObject (TrapType);\n\nvar Version1 = 0;\nvar Version2c = 1;\n\n/*****************************************************************************\n ** Exception class definitions\n **/\n\nfunction ResponseInvalidError (message) {\n\tthis.name = \"ResponseInvalidError\";\n\tthis.message = message;\n\tError.captureStackTrace(this, ResponseInvalidError);\n}\nutil.inherits (ResponseInvalidError, Error);\n\nfunction RequestInvalidError (message) {\n\tthis.name = \"RequestInvalidError\";\n\tthis.message = message;\n\tError.captureStackTrace(this, RequestInvalidError);\n}\nutil.inherits (RequestInvalidError, Error);\n\nfunction RequestFailedError (message, status) {\n\tthis.name = \"RequestFailedError\";\n\tthis.message = message;\n\tthis.status = status;\n\tError.captureStackTrace(this, RequestFailedError);\n}\nutil.inherits (RequestFailedError, Error);\n\nfunction RequestTimedOutError (message) {\n\tthis.name = \"RequestTimedOutError\";\n\tthis.message = message;\n\tError.captureStackTrace(this, RequestTimedOutError);\n}\nutil.inherits (RequestTimedOutError, Error);\n\n/*****************************************************************************\n ** OID and varbind helper functions\n **/\n\nfunction isVarbindError (varbind) {\n\treturn !!(varbind.type == ObjectType.NoSuchObject\n\t|| varbind.type == ObjectType.NoSuchInstance\n\t|| varbind.type == ObjectType.EndOfMibView);\n}\n\nfunction varbindError (varbind) {\n\treturn (ObjectType[varbind.type] || \"NotAnError\") + \": \" + varbind.oid;\n}\n\nfunction oidFollowsOid (oidString, nextString) {\n\tvar oid = {str: oidString, len: oidString.length, idx: 0};\n\tvar next = {str: nextString, len: nextString.length, idx: 0};\n\tvar dotCharCode = \".\".charCodeAt (0);\n\n\tfunction getNumber (item) {\n\t\tvar n = 0;\n\t\tif (item.idx >= item.len)\n\t\t\treturn null;\n\t\twhile (item.idx < item.len) {\n\t\t\tvar charCode = item.str.charCodeAt (item.idx++);\n\t\t\tif (charCode == dotCharCode)\n\t\t\t\treturn n;\n\t\t\tn = (n ? (n * 10) : n) + (charCode - 48);\n\t\t}\n\t\treturn n;\n\t}\n\n\twhile (1) {\n\t\tvar oidNumber = getNumber (oid);\n\t\tvar nextNumber = getNumber (next);\n\n\t\tif (oidNumber !== null) {\n\t\t\tif (nextNumber !== null) {\n\t\t\t\tif (nextNumber > oidNumber) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (nextNumber < oidNumber) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nfunction oidInSubtree (oidString, nextString) {\n\tvar oid = oidString.split (\".\");\n\tvar next = nextString.split (\".\");\n\n\tif (oid.length > next.length)\n\t\treturn false;\n\n\tfor (var i = 0; i < oid.length; i++) {\n\t\tif (next[i] != oid[i])\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n ** Some SNMP agents produce integers on the wire such as 00 ff ff ff ff.\n ** The ASN.1 BER parser we use throws an error when parsing this, which we\n ** believe is correct.  So, we decided not to bother the \"asn1\" developer(s)\n ** with this, instead opting to work around it here.\n **\n ** If an integer is 5 bytes in length we check if the first byte is 0, and if so\n ** simply drop it and parse it like it was a 4 byte integer, otherwise throw\n ** an error since the integer is too large.\n **/\n\nfunction readInt (buffer) {\n\treturn readUint (buffer, true);\n}\n\nfunction readUint (buffer, isSigned) {\n\tbuffer.readByte ();\n\tvar length = buffer.readByte ();\n\tvar value = 0;\n\tvar signedBitSet = false;\n\n\tif (length > 5) {\n\t\t throw new RangeError (\"Integer too long '\" + length + \"'\");\n\t} else if (length == 5) {\n\t\tif (buffer.readByte () !== 0)\n\t\t\tthrow new RangeError (\"Integer too long '\" + length + \"'\");\n\t\tlength = 4;\n\t}\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvalue *= 256;\n\t\tvalue += buffer.readByte ();\n\n\t\tif (isSigned && i <= 0) {\n\t\t\tif ((value & 0x80) == 0x80)\n\t\t\t\tsignedBitSet = true;\n\t\t}\n\t}\n\t\n\tif (signedBitSet)\n\t\tvalue -= (1 << (i * 8));\n\n\treturn value;\n}\n\nfunction readUint64 (buffer) {\n\tvar value = buffer.readString (ObjectType.Counter64, true);\n\n\treturn value;\n}\n\nfunction readVarbinds (buffer, varbinds) {\n\tbuffer.readSequence ();\n\n\twhile (1) {\n\t\tbuffer.readSequence ();\n\t\tvar oid = buffer.readOID ();\n\t\tvar type = buffer.peek ();\n\n\t\tif (type == null)\n\t\t\tbreak;\n\n\t\tvar value;\n\n\t\tif (type == ObjectType.Boolean) {\n\t\t\tvalue = buffer.readBoolean ();\n\t\t} else if (type == ObjectType.Integer) {\n\t\t\tvalue = readInt (buffer);\n\t\t} else if (type == ObjectType.OctetString) {\n\t\t\tvalue = buffer.readString (null, true);\n\t\t} else if (type == ObjectType.Null) {\n\t\t\tbuffer.readByte ();\n\t\t\tbuffer.readByte ();\n\t\t\tvalue = null;\n\t\t} else if (type == ObjectType.OID) {\n\t\t\tvalue = buffer.readOID ();\n\t\t} else if (type == ObjectType.IpAddress) {\n\t\t\tvar bytes = buffer.readString (ObjectType.IpAddress, true);\n\t\t\tif (bytes.length != 4)\n\t\t\t\tthrow new ResponseInvalidError (\"Length '\" + bytes.length\n\t\t\t\t\t\t+ \"' of IP address '\" + bytes.toString (\"hex\")\n\t\t\t\t\t\t+ \"' is not 4\");\n\t\t\tvalue = bytes[0] + \".\" + bytes[1] + \".\" + bytes[2] + \".\" + bytes[3];\n\t\t} else if (type == ObjectType.Counter) {\n\t\t\tvalue = readUint (buffer);\n\t\t} else if (type == ObjectType.Gauge) {\n\t\t\tvalue = readUint (buffer);\n\t\t} else if (type == ObjectType.TimeTicks) {\n\t\t\tvalue = readUint (buffer);\n\t\t} else if (type == ObjectType.Opaque) {\n\t\t\tvalue = buffer.readString (ObjectType.Opaque, true);\n\t\t} else if (type == ObjectType.Counter64) {\n\t\t\tvalue = readUint64 (buffer);\n\t\t} else if (type == ObjectType.NoSuchObject) {\n\t\t\tbuffer.readByte ();\n\t\t\tbuffer.readByte ();\n\t\t\tvalue = null;\n\t\t} else if (type == ObjectType.NoSuchInstance) {\n\t\t\tbuffer.readByte ();\n\t\t\tbuffer.readByte ();\n\t\t\tvalue = null;\n\t\t} else if (type == ObjectType.EndOfMibView) {\n\t\t\tbuffer.readByte ();\n\t\t\tbuffer.readByte ();\n\t\t\tvalue = null;\n\t\t} else {\n\t\t\tthrow new ResponseInvalidError (\"Unknown type '\" + type\n\t\t\t\t\t+ \"' in response\");\n\t\t}\n\n\t\tvarbinds.push ({\n\t\t\toid: oid,\n\t\t\ttype: type,\n\t\t\tvalue: value\n\t\t});\n\t}\n}\n\nfunction writeUint (buffer, type, value) {\n\tvar b = new Buffer (4);\n\tb.writeUInt32BE (value, 0);\n\tbuffer.writeBuffer (b, type);\n}\n\nfunction writeUint64 (buffer, value) {\n\tbuffer.writeBuffer (value, ObjectType.Counter64);\n}\n\nfunction writeVarbinds (buffer, varbinds) {\n\tbuffer.startSequence ();\n\tfor (var i = 0; i < varbinds.length; i++) {\n\t\tbuffer.startSequence ();\n\t\tbuffer.writeOID (varbinds[i].oid);\n\n\t\tif (varbinds[i].type && varbinds[i].hasOwnProperty(\"value\")) {\n\t\t\tvar type = varbinds[i].type;\n\t\t\tvar value = varbinds[i].value;\n\n\t\t\tif (type == ObjectType.Boolean) {\n\t\t\t\tbuffer.writeBoolean (value ? true : false);\n\t\t\t} else if (type == ObjectType.Integer) { // also Integer32\n\t\t\t\tbuffer.writeInt (value);\n\t\t\t} else if (type == ObjectType.OctetString) {\n\t\t\t\tif (typeof value == \"string\")\n\t\t\t\t\tbuffer.writeString (value);\n\t\t\t\telse\n\t\t\t\t\tbuffer.writeBuffer (value, ObjectType.OctetString);\n\t\t\t} else if (type == ObjectType.Null) {\n\t\t\t\tbuffer.writeNull ();\n\t\t\t} else if (type == ObjectType.OID) {\n\t\t\t\tbuffer.writeOID (value);\n\t\t\t} else if (type == ObjectType.IpAddress) {\n\t\t\t\tvar bytes = value.split (\".\");\n\t\t\t\tif (bytes.length != 4)\n\t\t\t\t\tthrow new RequestInvalidError (\"Invalid IP address '\"\n\t\t\t\t\t\t\t+ value + \"'\");\n\t\t\t\tbuffer.writeBuffer (new Buffer (bytes), 64);\n\t\t\t} else if (type == ObjectType.Counter) { // also Counter32\n\t\t\t\twriteUint (buffer, ObjectType.Counter, value);\n\t\t\t} else if (type == ObjectType.Gauge) { // also Gauge32 & Unsigned32\n\t\t\t\twriteUint (buffer, ObjectType.Gauge, value);\n\t\t\t} else if (type == ObjectType.TimeTicks) {\n\t\t\t\twriteUint (buffer, ObjectType.TimeTicks, value);\n\t\t\t} else if (type == ObjectType.Opaque) {\n\t\t\t\tbuffer.writeBuffer (value, ObjectType.Opaque);\n\t\t\t} else if (type == ObjectType.Counter64) {\n\t\t\t\twriteUint64 (buffer, value);\n\t\t\t} else {\n\t\t\t\tthrow new RequestInvalidError (\"Unknown type '\" + type\n\t\t\t\t\t\t+ \"' in request\");\n\t\t\t}\n\t\t} else {\n\t\t\tbuffer.writeNull ();\n\t\t}\n\n\t\tbuffer.endSequence ();\n\t}\n\tbuffer.endSequence ();\n}\n\n/*****************************************************************************\n ** PDU class definitions\n **/\n\nvar SimplePdu = function (id, varbinds, options) {\n\tthis.id = id;\n\tthis.varbinds = varbinds;\n\tthis.options = options || {};\n};\n\nSimplePdu.prototype.toBuffer = function (buffer) {\n\tbuffer.startSequence (this.type);\n\n\tbuffer.writeInt (this.id);\n\tbuffer.writeInt ((this.type == PduType.GetBulkRequest)\n\t\t\t? (this.options.nonRepeaters || 0)\n\t\t\t: 0);\n\tbuffer.writeInt ((this.type == PduType.GetBulkRequest)\n\t\t\t? (this.options.maxRepetitions || 0)\n\t\t\t: 0);\n\n\twriteVarbinds (buffer, this.varbinds);\n\n\tbuffer.endSequence ();\n};\n\nvar GetBulkRequestPdu = function () {\n\tthis.type = PduType.GetBulkRequest;\n\tGetBulkRequestPdu.super_.apply (this, arguments);\n};\n\nutil.inherits (GetBulkRequestPdu, SimplePdu);\n\nvar GetNextRequestPdu = function () {\n\tthis.type = PduType.GetNextRequest;\n\tGetNextRequestPdu.super_.apply (this, arguments);\n};\n\nutil.inherits (GetNextRequestPdu, SimplePdu);\n\nvar GetResponsePdu = function (buffer) {\n\tthis.type = PduType.GetResponse;\n\n\tbuffer.readSequence (this.type);\n\n\tthis.id = buffer.readInt ();\n\n\tthis.errorStatus = buffer.readInt ();\n\tthis.errorIndex = buffer.readInt ();\n\n\tthis.varbinds = [];\n\n\treadVarbinds (buffer, this.varbinds);\n};\n\nvar GetRequestPdu = function () {\n\tthis.type = PduType.GetRequest;\n\tGetRequestPdu.super_.apply (this, arguments);\n};\n\nutil.inherits (GetRequestPdu, SimplePdu);\n\nvar InformRequestPdu = function () {\n\tthis.type = PduType.InformRequest;\n\tInformRequestPdu.super_.apply (this, arguments);\n};\n\nutil.inherits (InformRequestPdu, SimplePdu);\n\nvar SetRequestPdu = function () {\n\tthis.type = PduType.SetRequest;\n\tSetRequestPdu.super_.apply (this, arguments);\n};\n\nutil.inherits (SetRequestPdu, SimplePdu);\n\nvar TrapPdu = function (typeOrOid, varbinds, options) {\n\tthis.type = PduType.Trap;\n\n\tthis.agentAddr = options.agentAddr || \"127.0.0.1\";\n\tthis.upTime = options.upTime;\n\n\tif (typeof typeOrOid == \"string\") {\n\t\tthis.generic = TrapType.EnterpriseSpecific;\n\t\tthis.specific = parseInt (typeOrOid.match (/\\.(\\d+)$/)[1]);\n\t\tthis.enterprise = typeOrOid.replace (/\\.(\\d+)$/, \"\");\n\t} else {\n\t\tthis.generic = typeOrOid;\n\t\tthis.specific = 0;\n\t\tthis.enterprise = \"1.3.6.1.4.1\";\n\t}\n\n\tthis.varbinds = varbinds;\n};\n\nTrapPdu.prototype.toBuffer = function (buffer) {\n\tbuffer.startSequence (this.type);\n\n\tbuffer.writeOID (this.enterprise);\n\tbuffer.writeBuffer (new Buffer (this.agentAddr.split (\".\")),\n\t\t\tObjectType.IpAddress);\n\tbuffer.writeInt (this.generic);\n\tbuffer.writeInt (this.specific);\n\twriteUint (buffer, ObjectType.TimeTicks,\n\t\t\tthis.upTime || Math.floor (process.uptime () * 100));\n\n\twriteVarbinds (buffer, this.varbinds);\n\n\tbuffer.endSequence ();\n};\n\nvar TrapV2Pdu = function () {\n\tthis.type = PduType.TrapV2;\n\tTrapV2Pdu.super_.apply (this, arguments);\n};\n\nutil.inherits (TrapV2Pdu, SimplePdu);\n\n/*****************************************************************************\n ** Message class definitions\n **/\n\nvar RequestMessage = function (version, community, pdu) {\n\tthis.version = version;\n\tthis.community = community;\n\tthis.pdu = pdu;\n};\n\nRequestMessage.prototype.toBuffer = function () {\n\tif (this.buffer)\n\t\treturn this.buffer;\n\n\tvar writer = new ber.Writer ();\n\n\twriter.startSequence ();\n\n\twriter.writeInt (this.version);\n\twriter.writeString (this.community);\n\n\tthis.pdu.toBuffer (writer);\n\n\twriter.endSequence ();\n\n\tthis.buffer = writer.buffer;\n\n\treturn this.buffer;\n};\n\nvar ResponseMessage = function (buffer) {\n\tvar reader = new ber.Reader (buffer);\n\n\treader.readSequence ();\n\n\tthis.version = reader.readInt ();\n\tthis.community = reader.readString ();\n\n\tvar type = reader.peek ();\n\n\tif (type == PduType.GetResponse) {\n\t\tthis.pdu = new GetResponsePdu (reader);\n\t} else {\n\t\tthrow new ResponseInvalidError (\"Unknown PDU type '\" + type\n\t\t\t\t+ \"' in response\");\n\t}\n};\n\n/*****************************************************************************\n ** Session class definition\n **/\n\nvar Session = function (target, community, options) {\n\tthis.target = target || \"127.0.0.1\";\n\tthis.community = community || \"public\";\n\n\tthis.version = (options && options.version)\n\t\t\t? options.version\n\t\t\t: Version1;\n\n\tthis.transport = (options && options.transport)\n\t\t\t? options.transport\n\t\t\t: \"udp4\";\n\tthis.port = (options && options.port )\n\t\t\t? options.port\n\t\t\t: 161;\n\tthis.trapPort = (options && options.trapPort )\n\t\t\t? options.trapPort\n\t\t\t: 162;\n\n\tthis.retries = (options && (options.retries || options.retries == 0))\n\t\t\t? options.retries\n\t\t\t: 1;\n\tthis.timeout = (options && options.timeout)\n\t\t\t? options.timeout\n\t\t\t: 5000;\n\n\tthis.sourceAddress = (options && options.sourceAddress )\n\t\t\t? options.sourceAddress\n\t\t\t: undefined;\n\tthis.sourcePort = (options && options.sourcePort )\n\t\t\t? parseInt(options.sourcePort)\n\t\t\t: undefined;\n\n\tthis.reqs = {};\n\tthis.reqCount = 0;\n\n\tthis.dgram = dgram.createSocket (this.transport);\n\tthis.dgram.unref();\n\t\n\tvar me = this;\n\tthis.dgram.on (\"message\", me.onMsg.bind (me));\n\tthis.dgram.on (\"close\", me.onClose.bind (me));\n\tthis.dgram.on (\"error\", me.onError.bind (me));\n\n\tif (this.sourceAddress || this.sourcePort)\n\t\tthis.dgram.bind (this.sourcePort, this.sourceAddress);\n};\n\nutil.inherits (Session, events.EventEmitter);\n\nSession.prototype.close = function () {\n\tthis.dgram.close ();\n\treturn this;\n};\n\nSession.prototype.cancelRequests = function (error) {\n\tvar id;\n\tfor (id in this.reqs) {\n\t\tvar req = this.reqs[id];\n\t\tthis.unregisterRequest (req.id);\n\t\treq.responseCb (error);\n\t}\n};\n\nfunction _generateId () {\n\treturn Math.floor (Math.random () + Math.random () * 10000000)\n}\n\nSession.prototype.get = function (oids, responseCb) {\n\tfunction feedCb (req, message) {\n\t\tvar pdu = message.pdu;\n\t\tvar varbinds = [];\n\n\t\tif (req.message.pdu.varbinds.length != pdu.varbinds.length) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Requested OIDs do not \"\n\t\t\t\t\t+ \"match response OIDs\"));\n\t\t} else {\n\t\t\tfor (var i = 0; i < req.message.pdu.varbinds.length; i++) {\n\t\t\t\tif (req.message.pdu.varbinds[i].oid != pdu.varbinds[i].oid) {\n\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t+ req.message.pdu.varbinds[i].oid\n\t\t\t\t\t\t\t+ \"' in request at positiion '\" + i + \"' does not \"\n\t\t\t\t\t\t\t+ \"match OID '\" + pdu.varbinds[i].oid + \"' in response \"\n\t\t\t\t\t\t\t+ \"at position '\" + i + \"'\"));\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.responseCb (null, varbinds);\n\t\t}\n\t}\n\n\tvar pduVarbinds = [];\n\n\tfor (var i = 0; i < oids.length; i++) {\n\t\tvar varbind = {\n\t\t\toid: oids[i]\n\t\t};\n\t\tpduVarbinds.push (varbind);\n\t}\n\n\tthis.simpleGet (GetRequestPdu, feedCb, pduVarbinds, responseCb);\n\n\treturn this;\n};\n\nSession.prototype.getBulk = function () {\n\tvar oids, nonRepeaters, maxRepetitions, responseCb;\n\n\tif (arguments.length >= 4) {\n\t\toids = arguments[0];\n\t\tnonRepeaters = arguments[1];\n\t\tmaxRepetitions = arguments[2];\n\t\tresponseCb = arguments[3];\n\t} else if (arguments.length >= 3) {\n\t\toids = arguments[0];\n\t\tnonRepeaters = arguments[1];\n\t\tmaxRepetitions = 10;\n\t\tresponseCb = arguments[2];\n\t} else {\n\t\toids = arguments[0];\n\t\tnonRepeaters = 0;\n\t\tmaxRepetitions = 10;\n\t\tresponseCb = arguments[1];\n\t}\n\n\tfunction feedCb (req, message) {\n\t\tvar pdu = message.pdu;\n\t\tvar varbinds = [];\n\t\tvar i = 0;\n\n\t\t// first walk through and grab non-repeaters\n\t\tif (pdu.varbinds.length < nonRepeaters) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Varbind count in \"\n\t\t\t\t\t+ \"response '\" + pdu.varbinds.length + \"' is less than \"\n\t\t\t\t\t+ \"non-repeaters '\" + nonRepeaters + \"' in request\"));\n\t\t} else {\n\t\t\tfor ( ; i < nonRepeaters; i++) {\n\t\t\t\tif (isVarbindError (pdu.varbinds[i])) {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t} else if (! oidFollowsOid (req.message.pdu.varbinds[i].oid,\n\t\t\t\t\t\tpdu.varbinds[i].oid)) {\n\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t+ req.message.pdu.varbinds[i].oid + \"' in request at \"\n\t\t\t\t\t\t\t+ \"positiion '\" + i + \"' does not precede \"\n\t\t\t\t\t\t\t+ \"OID '\" + pdu.varbinds[i].oid + \"' in response \"\n\t\t\t\t\t\t\t+ \"at position '\" + i + \"'\"));\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar repeaters = req.message.pdu.varbinds.length - nonRepeaters;\n\n\t\t// secondly walk through and grab repeaters\n\t\tif (pdu.varbinds.length % (repeaters)) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Varbind count in \"\n\t\t\t\t\t+ \"response '\" + pdu.varbinds.length + \"' is not a \"\n\t\t\t\t\t+ \"multiple of repeaters '\" + repeaters\n\t\t\t\t\t+ \"' plus non-repeaters '\" + nonRepeaters + \"' in request\"));\n\t\t} else {\n\t\t\twhile (i < pdu.varbinds.length) {\n\t\t\t\tfor (var j = 0; j < repeaters; j++, i++) {\n\t\t\t\t\tvar reqIndex = nonRepeaters + j;\n\t\t\t\t\tvar respIndex = i;\n\n\t\t\t\t\tif (isVarbindError (pdu.varbinds[respIndex])) {\n\t\t\t\t\t\tif (! varbinds[reqIndex])\n\t\t\t\t\t\t\tvarbinds[reqIndex] = [];\n\t\t\t\t\t\tvarbinds[reqIndex].push (pdu.varbinds[respIndex]);\n\t\t\t\t\t} else if (! oidFollowsOid (\n\t\t\t\t\t\t\treq.message.pdu.varbinds[reqIndex].oid,\n\t\t\t\t\t\t\tpdu.varbinds[respIndex].oid)) {\n\t\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t\t+ req.message.pdu.varbinds[reqIndex].oid\n\t\t\t\t\t\t\t\t+ \"' in request at positiion '\" + (reqIndex)\n\t\t\t\t\t\t\t\t+ \"' does not precede OID '\"\n\t\t\t\t\t\t\t\t+ pdu.varbinds[respIndex].oid\n\t\t\t\t\t\t\t\t+ \"' in response at position '\" + (respIndex) + \"'\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (! varbinds[reqIndex])\n\t\t\t\t\t\t\tvarbinds[reqIndex] = [];\n\t\t\t\t\t\tvarbinds[reqIndex].push (pdu.varbinds[respIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treq.responseCb (null, varbinds);\n\t}\n\n\tvar pduVarbinds = [];\n\n\tfor (var i = 0; i < oids.length; i++) {\n\t\tvar varbind = {\n\t\t\toid: oids[i]\n\t\t};\n\t\tpduVarbinds.push (varbind);\n\t}\n\n\tvar options = {\n\t\tnonRepeaters: nonRepeaters,\n\t\tmaxRepetitions: maxRepetitions\n\t};\n\n\tthis.simpleGet (GetBulkRequestPdu, feedCb, pduVarbinds, responseCb,\n\t\t\toptions);\n\n\treturn this;\n};\n\nSession.prototype.getNext = function (oids, responseCb) {\n\tfunction feedCb (req, message) {\n\t\tvar pdu = message.pdu;\n\t\tvar varbinds = [];\n\n\t\tif (req.message.pdu.varbinds.length != pdu.varbinds.length) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Requested OIDs do not \"\n\t\t\t\t\t+ \"match response OIDs\"));\n\t\t} else {\n\t\t\tfor (var i = 0; i < req.message.pdu.varbinds.length; i++) {\n\t\t\t\tif (isVarbindError (pdu.varbinds[i])) {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t} else if (! oidFollowsOid (req.message.pdu.varbinds[i].oid,\n\t\t\t\t\t\tpdu.varbinds[i].oid)) {\n\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t+ req.message.pdu.varbinds[i].oid + \"' in request at \"\n\t\t\t\t\t\t\t+ \"positiion '\" + i + \"' does not precede \"\n\t\t\t\t\t\t\t+ \"OID '\" + pdu.varbinds[i].oid + \"' in response \"\n\t\t\t\t\t\t\t+ \"at position '\" + i + \"'\"));\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.responseCb (null, varbinds);\n\t\t}\n\t}\n\n\tvar pduVarbinds = [];\n\n\tfor (var i = 0; i < oids.length; i++) {\n\t\tvar varbind = {\n\t\t\toid: oids[i]\n\t\t};\n\t\tpduVarbinds.push (varbind);\n\t}\n\n\tthis.simpleGet (GetNextRequestPdu, feedCb, pduVarbinds, responseCb);\n\n\treturn this;\n};\n\nSession.prototype.inform = function () {\n\tvar typeOrOid = arguments[0];\n\tvar varbinds, options = {}, responseCb;\n\n\t/**\n\t ** Support the following signatures:\n\t ** \n\t **    typeOrOid, varbinds, options, callback\n\t **    typeOrOid, varbinds, callback\n\t **    typeOrOid, options, callback\n\t **    typeOrOid, callback\n\t **/\n\tif (arguments.length >= 4) {\n\t\tvarbinds = arguments[1];\n\t\toptions = arguments[2];\n\t\tresponseCb = arguments[3];\n\t} else if (arguments.length >= 3) {\n\t\tif (arguments[1].constructor != Array) {\n\t\t\tvarbinds = [];\n\t\t\toptions = arguments[1];\n\t\t\tresponseCb = arguments[2];\n\t\t} else {\n\t\t\tvarbinds = arguments[1];\n\t\t\tresponseCb = arguments[2];\n\t\t}\n\t} else {\n\t\tvarbinds = [];\n\t\tresponseCb = arguments[1];\n\t}\n\n\tfunction feedCb (req, message) {\n\t\tvar pdu = message.pdu;\n\t\tvar varbinds = [];\n\n\t\tif (req.message.pdu.varbinds.length != pdu.varbinds.length) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Inform OIDs do not \"\n\t\t\t\t\t+ \"match response OIDs\"));\n\t\t} else {\n\t\t\tfor (var i = 0; i < req.message.pdu.varbinds.length; i++) {\n\t\t\t\tif (req.message.pdu.varbinds[i].oid != pdu.varbinds[i].oid) {\n\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t+ req.message.pdu.varbinds[i].oid\n\t\t\t\t\t\t\t+ \"' in inform at positiion '\" + i + \"' does not \"\n\t\t\t\t\t\t\t+ \"match OID '\" + pdu.varbinds[i].oid + \"' in response \"\n\t\t\t\t\t\t\t+ \"at position '\" + i + \"'\"));\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.responseCb (null, varbinds);\n\t\t}\n\t}\n\n\tif (typeof typeOrOid != \"string\")\n\t\ttypeOrOid = \"1.3.6.1.6.3.1.1.5.\" + (typeOrOid + 1);\n\n\tvar pduVarbinds = [\n\t\t{\n\t\t\toid: \"1.3.6.1.2.1.1.3.0\",\n\t\t\ttype: ObjectType.TimeTicks,\n\t\t\tvalue: options.upTime || Math.floor (process.uptime () * 100)\n\t\t},\n\t\t{\n\t\t\toid: \"1.3.6.1.6.3.1.1.4.1.0\",\n\t\t\ttype: ObjectType.OID,\n\t\t\tvalue: typeOrOid\n\t\t}\n\t];\n\n\tfor (var i = 0; i < varbinds.length; i++) {\n\t\tvar varbind = {\n\t\t\toid: varbinds[i].oid,\n\t\t\ttype: varbinds[i].type,\n\t\t\tvalue: varbinds[i].value\n\t\t};\n\t\tpduVarbinds.push (varbind);\n\t}\n\t\n\toptions.port = this.trapPort;\n\n\tthis.simpleGet (InformRequestPdu, feedCb, pduVarbinds, responseCb, options);\n\n\treturn this;\n};\n\nSession.prototype.onClose = function () {\n\tthis.cancelRequests (new Error (\"Socket forcibly closed\"));\n\tthis.emit (\"close\");\n};\n\nSession.prototype.onError = function (error) {\n\tthis.emit (error);\n};\n\nSession.prototype.onMsg = function (buffer, remote) {\n\ttry {\n\t\tvar message = new ResponseMessage (buffer);\n\n\t\tvar req = this.unregisterRequest (message.pdu.id);\n\t\tif (! req)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tif (message.version != req.message.version) {\n\t\t\t\treq.responseCb (new ResponseInvalidError (\"Version in request '\"\n\t\t\t\t\t\t+ req.message.version + \"' does not match version in \"\n\t\t\t\t\t\t+ \"response '\" + message.version));\n\t\t\t} else if (message.community != req.message.community) {\n\t\t\t\treq.responseCb (new ResponseInvalidError (\"Community '\"\n\t\t\t\t\t\t+ req.message.community + \"' in request does not match \"\n\t\t\t\t\t\t+ \"community '\" + message.community + \"' in response\"));\n\t\t\t} else if (message.pdu.type == PduType.GetResponse) {\n\t\t\t\treq.onResponse (req, message);\n\t\t\t} else {\n\t\t\t\treq.responseCb (new ResponseInvalidError (\"Unknown PDU type '\"\n\t\t\t\t\t\t+ message.pdu.type + \"' in response\"));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treq.responseCb (error);\n\t\t}\n\t} catch (error) {\n\t\tthis.emit(\"error\", error);\n\t}\n};\n\nSession.prototype.onSimpleGetResponse = function (req, message) {\n\tvar pdu = message.pdu;\n\n\tif (pdu.errorStatus > 0) {\n\t\tvar statusString = ErrorStatus[pdu.errorStatus]\n\t\t\t\t|| ErrorStatus.GeneralError;\n\t\tvar statusCode = ErrorStatus[statusString]\n\t\t\t\t|| ErrorStatus[ErrorStatus.GeneralError];\n\n\t\tif (pdu.errorIndex <= 0 || pdu.errorIndex > pdu.varbinds.length) {\n\t\t\treq.responseCb (new RequestFailedError (statusString, statusCode));\n\t\t} else {\n\t\t\tvar oid = pdu.varbinds[pdu.errorIndex - 1].oid;\n\t\t\tvar error = new RequestFailedError (statusString + \": \" + oid,\n\t\t\t\t\tstatusCode);\n\t\t\treq.responseCb (error);\n\t\t}\n\t} else {\n\t\treq.feedCb (req, message);\n\t}\n};\n\nSession.prototype.registerRequest = function (req) {\n\tif (! this.reqs[req.id]) {\n\t\tthis.reqs[req.id] = req;\n\t\tif (this.reqCount <= 0)\n\t\t\tthis.dgram.ref();\n\t\tthis.reqCount++;\n\t}\n\tvar me = this;\n\treq.timer = setTimeout (function () {\n\t\tif (req.retries-- > 0) {\n\t\t\tme.send (req);\n\t\t} else {\n\t\t\tme.unregisterRequest (req.id);\n\t\t\treq.responseCb (new RequestTimedOutError (\n\t\t\t\t\t\"Request timed out\"));\n\t\t}\n\t}, req.timeout);\n};\n\nSession.prototype.send = function (req, noWait) {\n\ttry {\n\t\tvar me = this;\n\t\t\n\t\tvar buffer = req.message.toBuffer ();\n\n\t\tthis.dgram.send (buffer, 0, buffer.length, req.port, this.target,\n\t\t\t\tfunction (error, bytes) {\n\t\t\tif (error) {\n\t\t\t\treq.responseCb (error);\n\t\t\t} else {\n\t\t\t\tif (noWait) {\n\t\t\t\t\treq.responseCb (null);\n\t\t\t\t} else {\n\t\t\t\t\tme.registerRequest (req);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\treq.responseCb (error);\n\t}\n\t\n\treturn this;\n};\n\nSession.prototype.set = function (varbinds, responseCb) {\n\tfunction feedCb (req, message) {\n\t\tvar pdu = message.pdu;\n\t\tvar varbinds = [];\n\n\t\tif (req.message.pdu.varbinds.length != pdu.varbinds.length) {\n\t\t\treq.responseCb (new ResponseInvalidError (\"Requested OIDs do not \"\n\t\t\t\t\t+ \"match response OIDs\"));\n\t\t} else {\n\t\t\tfor (var i = 0; i < req.message.pdu.varbinds.length; i++) {\n\t\t\t\tif (req.message.pdu.varbinds[i].oid != pdu.varbinds[i].oid) {\n\t\t\t\t\treq.responseCb (new ResponseInvalidError (\"OID '\"\n\t\t\t\t\t\t\t+ req.message.pdu.varbinds[i].oid\n\t\t\t\t\t\t\t+ \"' in request at positiion '\" + i + \"' does not \"\n\t\t\t\t\t\t\t+ \"match OID '\" + pdu.varbinds[i].oid + \"' in response \"\n\t\t\t\t\t\t\t+ \"at position '\" + i + \"'\"));\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvarbinds.push (pdu.varbinds[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.responseCb (null, varbinds);\n\t\t}\n\t}\n\n\tvar pduVarbinds = [];\n\n\tfor (var i = 0; i < varbinds.length; i++) {\n\t\tvar varbind = {\n\t\t\toid: varbinds[i].oid,\n\t\t\ttype: varbinds[i].type,\n\t\t\tvalue: varbinds[i].value\n\t\t};\n\t\tpduVarbinds.push (varbind);\n\t}\n\n\tthis.simpleGet (SetRequestPdu, feedCb, pduVarbinds, responseCb);\n\n\treturn this;\n};\n\nSession.prototype.simpleGet = function (pduClass, feedCb, varbinds,\n\t\tresponseCb, options) {\n\tvar req = {};\n\n\ttry {\n\t\tvar id = _generateId ();\n\t\tvar pdu = new pduClass (id, varbinds, options);\n\t\tvar message = new RequestMessage (this.version, this.community, pdu);\n\n\t\treq = {\n\t\t\tid: id,\n\t\t\tmessage: message,\n\t\t\tresponseCb: responseCb,\n\t\t\tretries: this.retries,\n\t\t\ttimeout: this.timeout,\n\t\t\tonResponse: this.onSimpleGetResponse,\n\t\t\tfeedCb: feedCb,\n\t\t\tport: (options && options.port) ? options.port : this.port\n\t\t};\n\n\t\tthis.send (req);\n\t} catch (error) {\n\t\tif (req.responseCb)\n\t\t\treq.responseCb (error);\n\t}\n};\n\nfunction subtreeCb (req, varbinds) {\n\tvar done = 0;\n\n\tfor (var i = varbinds.length; i > 0; i--) {\n\t\tif (! oidInSubtree (req.baseOid, varbinds[i - 1].oid)) {\n\t\t\tdone = 1;\n\t\t\tvarbinds.pop ();\n\t\t}\n\t}\n\n\tif (varbinds.length > 0)\n\t\treq.feedCb (varbinds);\n\n\tif (done)\n\t\treturn true;\n}\n\nSession.prototype.subtree  = function () {\n\tvar me = this;\n\tvar oid = arguments[0];\n\tvar maxRepetitions, feedCb, doneCb;\n\n\tif (arguments.length < 4) {\n\t\tmaxRepetitions = 20;\n\t\tfeedCb = arguments[1];\n\t\tdoneCb = arguments[2];\n\t} else {\n\t\tmaxRepetitions = arguments[1];\n\t\tfeedCb = arguments[2];\n\t\tdoneCb = arguments[3];\n\t}\n\n\tvar req = {\n\t\tfeedCb: feedCb,\n\t\tdoneCb: doneCb,\n\t\tmaxRepetitions: maxRepetitions,\n\t\tbaseOid: oid\n\t};\n\n\tthis.walk (oid, maxRepetitions, subtreeCb.bind (me, req), doneCb);\n\n\treturn this;\n};\n\nfunction tableColumnsResponseCb (req, error) {\n\tif (error) {\n\t\treq.responseCb (error);\n\t} else if (req.error) {\n\t\treq.responseCb (req.error);\n\t} else {\n\t\tif (req.columns.length > 0) {\n\t\t\tvar column = req.columns.pop ();\n\t\t\tvar me = this;\n\t\t\tthis.subtree (req.rowOid + column, req.maxRepetitions,\n\t\t\t\t\ttableColumnsFeedCb.bind (me, req),\n\t\t\t\t\ttableColumnsResponseCb.bind (me, req));\n\t\t} else {\n\t\t\treq.responseCb (null, req.table);\n\t\t}\n\t}\n}\n\nfunction tableColumnsFeedCb (req, varbinds) {\n\tfor (var i = 0; i < varbinds.length; i++) {\n\t\tif (isVarbindError (varbinds[i])) {\n\t\t\treq.error = new RequestFailedError (varbindError (varbind[i]));\n\t\t\treturn true;\n\t\t}\n\n\t\tvar oid = varbinds[i].oid.replace (req.rowOid, \"\");\n\t\tif (oid && oid != varbinds[i].oid) {\n\t\t\tvar match = oid.match (/^(\\d+)\\.(.+)$/);\n\t\t\tif (match && match[1] > 0) {\n\t\t\t\tif (! req.table[match[2]])\n\t\t\t\t\treq.table[match[2]] = {};\n\t\t\t\treq.table[match[2]][match[1]] = varbinds[i].value;\n\t\t\t}\n\t\t}\n\t}\n}\n\nSession.prototype.tableColumns = function () {\n\tvar me = this;\n\n\tvar oid = arguments[0];\n\tvar columns = arguments[1];\n\tvar maxRepetitions, responseCb;\n\n\tif (arguments.length < 4) {\n\t\tresponseCb = arguments[2];\n\t\tmaxRepetitions = 20;\n\t} else {\n\t\tmaxRepetitions = arguments[2];\n\t\tresponseCb = arguments[3];\n\t}\n\n\tvar req = {\n\t\tresponseCb: responseCb,\n\t\tmaxRepetitions: maxRepetitions,\n\t\tbaseOid: oid,\n\t\trowOid: oid + \".1.\",\n\t\tcolumns: columns.slice(0),\n\t\ttable: {}\n\t};\n\n\tif (req.columns.length > 0) {\n\t\tvar column = req.columns.pop ();\n\t\tthis.subtree (req.rowOid + column, maxRepetitions,\n\t\t\t\ttableColumnsFeedCb.bind (me, req),\n\t\t\t\ttableColumnsResponseCb.bind (me, req));\n\t}\n\n\treturn this;\n};\n\nfunction tableResponseCb (req, error) {\n\tif (error)\n\t\treq.responseCb (error);\n\telse if (req.error)\n\t\treq.responseCb (req.error);\n\telse\n\t\treq.responseCb (null, req.table);\n}\n\nfunction tableFeedCb (req, varbinds) {\n\tfor (var i = 0; i < varbinds.length; i++) {\n\t\tif (isVarbindError (varbinds[i])) {\n\t\t\treq.error = new RequestFailedError (varbindError (varbind[i]));\n\t\t\treturn true;\n\t\t}\n\n\t\tvar oid = varbinds[i].oid.replace (req.rowOid, \"\");\n\t\tif (oid && oid != varbinds[i].oid) {\n\t\t\tvar match = oid.match (/^(\\d+)\\.(.+)$/);\n\t\t\tif (match && match[1] > 0) {\n\t\t\t\tif (! req.table[match[2]])\n\t\t\t\t\treq.table[match[2]] = {};\n\t\t\t\treq.table[match[2]][match[1]] = varbinds[i].value;\n\t\t\t}\n\t\t}\n\t}\n}\n\nSession.prototype.table = function () {\n\tvar me = this;\n\n\tvar oid = arguments[0];\n\tvar maxRepetitions, responseCb;\n\n\tif (arguments.length < 3) {\n\t\tresponseCb = arguments[1];\n\t\tmaxRepetitions = 20;\n\t} else {\n\t\tmaxRepetitions = arguments[1];\n\t\tresponseCb = arguments[2];\n\t}\n\n\tvar req = {\n\t\tresponseCb: responseCb,\n\t\tmaxRepetitions: maxRepetitions,\n\t\tbaseOid: oid,\n\t\trowOid: oid + \".1.\",\n\t\ttable: {}\n\t};\n\n\tthis.subtree (oid, maxRepetitions, tableFeedCb.bind (me, req),\n\t\t\ttableResponseCb.bind (me, req));\n\n\treturn this;\n};\n\nSession.prototype.trap = function () {\n\tvar req = {};\n\n\ttry {\n\t\tvar typeOrOid = arguments[0];\n\t\tvar varbinds, options = {}, responseCb;\n\n\t\t/**\n\t\t ** Support the following signatures:\n\t\t ** \n\t\t **    typeOrOid, varbinds, options, callback\n\t\t **    typeOrOid, varbinds, agentAddr, callback\n\t\t **    typeOrOid, varbinds, callback\n\t\t **    typeOrOid, agentAddr, callback\n\t\t **    typeOrOid, options, callback\n\t\t **    typeOrOid, callback\n\t\t **/\n\t\tif (arguments.length >= 4) {\n\t\t\tvarbinds = arguments[1];\n\t\t\tif (typeof arguments[2] == \"string\") {\n\t\t\t\toptions.agentAddr = arguments[2];\n\t\t\t} else if (arguments[2].constructor != Array) {\n\t\t\t\toptions = arguments[2];\n\t\t\t}\n\t\t\tresponseCb = arguments[3];\n\t\t} else if (arguments.length >= 3) {\n\t\t\tif (typeof arguments[1] == \"string\") {\n\t\t\t\tvarbinds = [];\n\t\t\t\toptions.agentAddr = arguments[1];\n\t\t\t} else if (arguments[1].constructor != Array) {\n\t\t\t\tvarbinds = [];\n\t\t\t\toptions = arguments[1];\n\t\t\t} else {\n\t\t\t\tvarbinds = arguments[1];\n\t\t\t\tagentAddr = null;\n\t\t\t}\n\t\t\tresponseCb = arguments[2];\n\t\t} else {\n\t\t\tvarbinds = [];\n\t\t\tresponseCb = arguments[1];\n\t\t}\n\n\t\tvar pdu, pduVarbinds = [];\n\n\t\tfor (var i = 0; i < varbinds.length; i++) {\n\t\t\tvar varbind = {\n\t\t\t\toid: varbinds[i].oid,\n\t\t\t\ttype: varbinds[i].type,\n\t\t\t\tvalue: varbinds[i].value\n\t\t\t};\n\t\t\tpduVarbinds.push (varbind);\n\t\t}\n\t\t\n\t\tvar id = _generateId ();\n\n\t\tif (this.version == Version2c) {\n\t\t\tif (typeof typeOrOid != \"string\")\n\t\t\t\ttypeOrOid = \"1.3.6.1.6.3.1.1.5.\" + (typeOrOid + 1);\n\n\t\t\tpduVarbinds.unshift (\n\t\t\t\t{\n\t\t\t\t\toid: \"1.3.6.1.2.1.1.3.0\",\n\t\t\t\t\ttype: ObjectType.TimeTicks,\n\t\t\t\t\tvalue: options.upTime || Math.floor (process.uptime () * 100)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\toid: \"1.3.6.1.6.3.1.1.4.1.0\",\n\t\t\t\t\ttype: ObjectType.OID,\n\t\t\t\t\tvalue: typeOrOid\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tpdu = new TrapV2Pdu (id, pduVarbinds, options);\n\t\t} else {\n\t\t\tpdu = new TrapPdu (typeOrOid, pduVarbinds, options);\n\t\t}\n\n\t\tvar message = new RequestMessage (this.version, this.community, pdu);\n\n\t\treq = {\n\t\t\tid: id,\n\t\t\tmessage: message,\n\t\t\tresponseCb: responseCb,\n\t\t\tport: this.trapPort\n\t\t};\n\n\t\tthis.send (req, true);\n\t} catch (error) {\n\t\tif (req.responseCb)\n\t\t\treq.responseCb (error);\n\t}\n\n\treturn this;\n};\n\nSession.prototype.unregisterRequest = function (id) {\n\tvar req = this.reqs[id];\n\tif (req) {\n\t\tdelete this.reqs[id];\n\t\tclearTimeout (req.timer);\n\t\tdelete req.timer;\n\t\tthis.reqCount--;\n\t\tif (this.reqCount <= 0)\n\t\t\tthis.dgram.unref();\n\t\treturn req;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nfunction walkCb (req, error, varbinds) {\n\tvar done = 0;\n\tvar oid;\n\n\tif (error) {\n\t\tif (error instanceof RequestFailedError) {\n\t\t\tif (error.status != ErrorStatus.NoSuchName) {\n\t\t\t\treq.doneCb (error);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// signal the version 1 walk code below that it should stop\n\t\t\t\tdone = 1;\n\t\t\t}\n\t\t} else {\n\t\t\treq.doneCb (error);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (this.version == Version2c) {\n\t\tfor (var i = varbinds[0].length; i > 0; i--) {\n\t\t\tif (varbinds[0][i - 1].type == ObjectType.EndOfMibView) {\n\t\t\t\tvarbinds[0].pop ();\n\t\t\t\tdone = 1;\n\t\t\t}\n\t\t}\n\t\tif (req.feedCb (varbinds[0]))\n\t\t\tdone = 1;\n\t\tif (! done)\n\t\t\toid = varbinds[0][varbinds[0].length - 1].oid;\n\t} else {\n\t\tif (! done) {\n\t\t\tif (req.feedCb (varbinds)) {\n\t\t\t\tdone = 1;\n\t\t\t} else {\n\t\t\t\toid = varbinds[0].oid;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (done)\n\t\treq.doneCb (null);\n\telse\n\t\tthis.walk (oid, req.maxRepetitions, req.feedCb, req.doneCb,\n\t\t\t\treq.baseOid);\n}\n\nSession.prototype.walk  = function () {\n\tvar me = this;\n\tvar oid = arguments[0];\n\tvar maxRepetitions, feedCb, doneCb, baseOid;\n\n\tif (arguments.length < 4) {\n\t\tmaxRepetitions = 20;\n\t\tfeedCb = arguments[1];\n\t\tdoneCb = arguments[2];\n\t} else {\n\t\tmaxRepetitions = arguments[1];\n\t\tfeedCb = arguments[2];\n\t\tdoneCb = arguments[3];\n\t}\n\n\tvar req = {\n\t\tmaxRepetitions: maxRepetitions,\n\t\tfeedCb: feedCb,\n\t\tdoneCb: doneCb\n\t};\n\n\tif (this.version == Version2c)\n\t\tthis.getBulk ([oid], 0, maxRepetitions,\n\t\t\t\twalkCb.bind (me, req));\n\telse\n\t\tthis.getNext ([oid], walkCb.bind (me, req));\n\n\treturn this;\n};\n\n/*****************************************************************************\n ** Exports\n **/\n\nexports.Session = Session;\n\nexports.createSession = function (target, community, options) {\n\treturn new Session (target, community, options);\n};\n\nexports.isVarbindError = isVarbindError;\nexports.varbindError = varbindError;\n\nexports.Version1 = Version1;\nexports.Version2c = Version2c;\n\nexports.ErrorStatus = ErrorStatus;\nexports.TrapType = TrapType;\nexports.ObjectType = ObjectType;\n\nexports.ResponseInvalidError = ResponseInvalidError;\nexports.RequestInvalidError = RequestInvalidError;\nexports.RequestFailedError = RequestFailedError;\nexports.RequestTimedOutError = RequestTimedOutError;\n\n/**\n ** We've added this for testing.\n **/\nexports.ObjectParser = {\n\treadInt: readInt,\n\treadUint: readUint\n};\n"}